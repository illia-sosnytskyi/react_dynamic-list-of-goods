{"version":3,"sources":["GoodsList.tsx","api/goods.ts","urils.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","getAll","fetch","then","result","ok","Error","status","statusText","json","App","useState","setGoods","showGoods","callback","shownGoods","className","type","onClick","sort","a","b","localeCompare","filter","index","length","ReactDOM","render","document","getElementById"],"mappings":"wMAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAOF,EAAKE,MAAQF,EAAKE,MAAQ,SAH5C,SAKGF,EAAKG,MAJDH,EAAKI,UCRX,SAASC,IACd,OCAOC,MAHO,yEAIXC,MAAK,SAAAC,GACJ,IAAKA,EAAOC,GACV,MAAM,IAAIC,MAAJ,UAAaF,EAAOG,OAApB,cAAgCH,EAAOI,aAG/C,OAAOJ,EAAOK,UDHb,IEAMC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOjB,EAAP,KAAckB,EAAd,KAEMC,EAAY,SAACC,GACjBA,EAASX,MAAK,SAAAY,GAAU,OAAIH,EAASG,OAGvC,OACE,sBAAKC,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAML,EAAUZ,MAH3B,4BAQA,wBACEgB,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAML,EFrBdZ,IACJE,MAAK,SAAAT,GAAK,OAAIA,EACZyB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAErB,KAAKuB,cAAcD,EAAEtB,SACtCwB,QAAO,SAAC3B,EAAM4B,GACb,OAAIA,EAAQ,EACH5B,EAGF,aEUT,gCAQA,wBACEqB,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAML,EFhBdZ,IACJE,MAAK,SAAAT,GAAK,OAAIA,EACZ6B,QAAO,SAAA3B,GAAI,MAAmB,QAAfA,EAAKE,cEWrB,4BASEJ,EAAM+B,OAAS,GACZ,cAAC,EAAD,CAAW/B,MAAOA,QCzC7BgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.96100739.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color ? good.color : 'black' }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\nimport { request } from '../urils';\n\nexport function getAll(): Promise<Good[]> {\n  return request();\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .filter((good, index) => {\n        if (index < 5) {\n          return good;\n        }\n\n        return null;\n      }));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods\n      .filter(good => good.color === 'red'));\n};\n","// eslint-disable-next-line\nconst API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n\nexport const request = () => {\n  return fetch(API_URL)\n    .then(result => {\n      if (!result.ok) {\n        throw new Error(`${result.status} - ${result.statusText}`);\n      }\n\n      return result.json();\n    });\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const showGoods = (callback: Promise<Good[]>) => {\n    callback.then(shownGoods => setGoods(shownGoods));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => showGoods(getAll())}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => showGoods(get5First())}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => showGoods(getRedGoods())}\n      >\n        Load red goods\n      </button>\n\n      {\n        goods.length > 0\n        && <GoodsList goods={goods} />\n      }\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}